{
  "$message_type": "diagnostic",
  "children": [
    {
      "children": [],
      "code": null,
      "level": "note",
      "message": "`#[warn(forgetting_references)]` on by default",
      "rendered": null,
      "spans": []
    },
    {
      "children": [],
      "code": null,
      "level": "help",
      "message": "use `let _ = ...` to ignore the expression or result",
      "rendered": null,
      "spans": [
        {
          "byte_end": 142,
          "byte_start": 125,
          "column_end": 26,
          "column_start": 9,
          "expansion": {
            "def_site_span": {
              "byte_end": 73,
              "byte_start": 57,
              "column_end": 17,
              "column_start": 1,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 2,
              "line_start": 2,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 17,
                  "highlight_start": 1,
                  "text": "macro_rules! foo {"
                }
              ]
            },
            "macro_decl_name": "foo!",
            "span": {
              "byte_end": 179,
              "byte_start": 173,
              "column_end": 11,
              "column_start": 5,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 10,
              "line_start": 10,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 11,
                  "highlight_start": 5,
                  "text": "    foo!();"
                }
              ]
            }
          },
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": true,
          "label": null,
          "line_end": 5,
          "line_start": 5,
          "suggested_replacement": "let _ = ",
          "suggestion_applicability": "MaybeIncorrect",
          "text": [
            {
              "highlight_end": 26,
              "highlight_start": 9,
              "text": "        std::mem::forget(&x);"
            }
          ]
        },
        {
          "byte_end": 145,
          "byte_start": 144,
          "column_end": 29,
          "column_start": 28,
          "expansion": {
            "def_site_span": {
              "byte_end": 73,
              "byte_start": 57,
              "column_end": 17,
              "column_start": 1,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 2,
              "line_start": 2,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 17,
                  "highlight_start": 1,
                  "text": "macro_rules! foo {"
                }
              ]
            },
            "macro_decl_name": "foo!",
            "span": {
              "byte_end": 179,
              "byte_start": 173,
              "column_end": 11,
              "column_start": 5,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 10,
              "line_start": 10,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 11,
                  "highlight_start": 5,
                  "text": "    foo!();"
                }
              ]
            }
          },
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": true,
          "label": null,
          "line_end": 5,
          "line_start": 5,
          "suggested_replacement": "",
          "suggestion_applicability": "MaybeIncorrect",
          "text": [
            {
              "highlight_end": 29,
              "highlight_start": 28,
              "text": "        std::mem::forget(&x);"
            }
          ]
        }
      ]
    }
  ],
  "code": {
    "code": "forgetting_references",
    "explanation": null
  },
  "level": "warning",
  "message": "calls to `std::mem::forget` with a reference instead of an owned value does nothing",
  "rendered": "warning: calls to `std::mem::forget` with a reference instead of an owned value does nothing/n  --> ./tests/everything/dedup-suggestions.rs:5:9/n   |/n5  |         std::mem::forget(&x);/n   |         ^^^^^^^^^^^^^^^^^--^/n   |                          |/n   |                          argument has type `&Box<i32>`/n.../n10 |     foo!();/n   |     ------ in this macro invocation/n   |/n   = note: `#[warn(forgetting_references)]` on by default/n   = note: this warning originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)/nhelp: use `let _ = ...` to ignore the expression or result/n   |/n5  -         std::mem::forget(&x);/n5  +         let _ = &x;/n   |/n/n",
  "spans": [
    {
      "byte_end": 144,
      "byte_start": 142,
      "column_end": 28,
      "column_start": 26,
      "expansion": {
        "def_site_span": {
          "byte_end": 73,
          "byte_start": 57,
          "column_end": 17,
          "column_start": 1,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 2,
          "line_start": 2,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 17,
              "highlight_start": 1,
              "text": "macro_rules! foo {"
            }
          ]
        },
        "macro_decl_name": "foo!",
        "span": {
          "byte_end": 179,
          "byte_start": 173,
          "column_end": 11,
          "column_start": 5,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 10,
          "line_start": 10,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 11,
              "highlight_start": 5,
              "text": "    foo!();"
            }
          ]
        }
      },
      "file_name": "./tests/everything/dedup-suggestions.rs",
      "is_primary": false,
      "label": "argument has type `&Box<i32>`",
      "line_end": 5,
      "line_start": 5,
      "suggested_replacement": null,
      "suggestion_applicability": null,
      "text": [
        {
          "highlight_end": 28,
          "highlight_start": 26,
          "text": "        std::mem::forget(&x);"
        }
      ]
    },
    {
      "byte_end": 145,
      "byte_start": 125,
      "column_end": 29,
      "column_start": 9,
      "expansion": {
        "def_site_span": {
          "byte_end": 73,
          "byte_start": 57,
          "column_end": 17,
          "column_start": 1,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 2,
          "line_start": 2,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 17,
              "highlight_start": 1,
              "text": "macro_rules! foo {"
            }
          ]
        },
        "macro_decl_name": "foo!",
        "span": {
          "byte_end": 179,
          "byte_start": 173,
          "column_end": 11,
          "column_start": 5,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 10,
          "line_start": 10,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 11,
              "highlight_start": 5,
              "text": "    foo!();"
            }
          ]
        }
      },
      "file_name": "./tests/everything/dedup-suggestions.rs",
      "is_primary": true,
      "label": null,
      "line_end": 5,
      "line_start": 5,
      "suggested_replacement": null,
      "suggestion_applicability": null,
      "text": [
        {
          "highlight_end": 29,
          "highlight_start": 9,
          "text": "        std::mem::forget(&x);"
        }
      ]
    }
  ]
}
{
  "$message_type": "diagnostic",
  "children": [
    {
      "children": [],
      "code": null,
      "level": "help",
      "message": "use `let _ = ...` to ignore the expression or result",
      "rendered": null,
      "spans": [
        {
          "byte_end": 142,
          "byte_start": 125,
          "column_end": 26,
          "column_start": 9,
          "expansion": {
            "def_site_span": {
              "byte_end": 73,
              "byte_start": 57,
              "column_end": 17,
              "column_start": 1,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 2,
              "line_start": 2,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 17,
                  "highlight_start": 1,
                  "text": "macro_rules! foo {"
                }
              ]
            },
            "macro_decl_name": "foo!",
            "span": {
              "byte_end": 191,
              "byte_start": 185,
              "column_end": 11,
              "column_start": 5,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 11,
              "line_start": 11,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 11,
                  "highlight_start": 5,
                  "text": "    foo!();"
                }
              ]
            }
          },
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": true,
          "label": null,
          "line_end": 5,
          "line_start": 5,
          "suggested_replacement": "let _ = ",
          "suggestion_applicability": "MaybeIncorrect",
          "text": [
            {
              "highlight_end": 26,
              "highlight_start": 9,
              "text": "        std::mem::forget(&x);"
            }
          ]
        },
        {
          "byte_end": 145,
          "byte_start": 144,
          "column_end": 29,
          "column_start": 28,
          "expansion": {
            "def_site_span": {
              "byte_end": 73,
              "byte_start": 57,
              "column_end": 17,
              "column_start": 1,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 2,
              "line_start": 2,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 17,
                  "highlight_start": 1,
                  "text": "macro_rules! foo {"
                }
              ]
            },
            "macro_decl_name": "foo!",
            "span": {
              "byte_end": 191,
              "byte_start": 185,
              "column_end": 11,
              "column_start": 5,
              "expansion": null,
              "file_name": "./tests/everything/dedup-suggestions.rs",
              "is_primary": false,
              "label": null,
              "line_end": 11,
              "line_start": 11,
              "suggested_replacement": null,
              "suggestion_applicability": null,
              "text": [
                {
                  "highlight_end": 11,
                  "highlight_start": 5,
                  "text": "    foo!();"
                }
              ]
            }
          },
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": true,
          "label": null,
          "line_end": 5,
          "line_start": 5,
          "suggested_replacement": "",
          "suggestion_applicability": "MaybeIncorrect",
          "text": [
            {
              "highlight_end": 29,
              "highlight_start": 28,
              "text": "        std::mem::forget(&x);"
            }
          ]
        }
      ]
    }
  ],
  "code": {
    "code": "forgetting_references",
    "explanation": null
  },
  "level": "warning",
  "message": "calls to `std::mem::forget` with a reference instead of an owned value does nothing",
  "rendered": "warning: calls to `std::mem::forget` with a reference instead of an owned value does nothing/n  --> ./tests/everything/dedup-suggestions.rs:5:9/n   |/n5  |         std::mem::forget(&x);/n   |         ^^^^^^^^^^^^^^^^^--^/n   |                          |/n   |                          argument has type `&Box<i32>`/n.../n11 |     foo!();/n   |     ------ in this macro invocation/n   |/n   = note: this warning originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)/nhelp: use `let _ = ...` to ignore the expression or result/n   |/n5  -         std::mem::forget(&x);/n5  +         let _ = &x;/n   |/n/n",
  "spans": [
    {
      "byte_end": 144,
      "byte_start": 142,
      "column_end": 28,
      "column_start": 26,
      "expansion": {
        "def_site_span": {
          "byte_end": 73,
          "byte_start": 57,
          "column_end": 17,
          "column_start": 1,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 2,
          "line_start": 2,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 17,
              "highlight_start": 1,
              "text": "macro_rules! foo {"
            }
          ]
        },
        "macro_decl_name": "foo!",
        "span": {
          "byte_end": 191,
          "byte_start": 185,
          "column_end": 11,
          "column_start": 5,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 11,
          "line_start": 11,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 11,
              "highlight_start": 5,
              "text": "    foo!();"
            }
          ]
        }
      },
      "file_name": "./tests/everything/dedup-suggestions.rs",
      "is_primary": false,
      "label": "argument has type `&Box<i32>`",
      "line_end": 5,
      "line_start": 5,
      "suggested_replacement": null,
      "suggestion_applicability": null,
      "text": [
        {
          "highlight_end": 28,
          "highlight_start": 26,
          "text": "        std::mem::forget(&x);"
        }
      ]
    },
    {
      "byte_end": 145,
      "byte_start": 125,
      "column_end": 29,
      "column_start": 9,
      "expansion": {
        "def_site_span": {
          "byte_end": 73,
          "byte_start": 57,
          "column_end": 17,
          "column_start": 1,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 2,
          "line_start": 2,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 17,
              "highlight_start": 1,
              "text": "macro_rules! foo {"
            }
          ]
        },
        "macro_decl_name": "foo!",
        "span": {
          "byte_end": 191,
          "byte_start": 185,
          "column_end": 11,
          "column_start": 5,
          "expansion": null,
          "file_name": "./tests/everything/dedup-suggestions.rs",
          "is_primary": false,
          "label": null,
          "line_end": 11,
          "line_start": 11,
          "suggested_replacement": null,
          "suggestion_applicability": null,
          "text": [
            {
              "highlight_end": 11,
              "highlight_start": 5,
              "text": "    foo!();"
            }
          ]
        }
      },
      "file_name": "./tests/everything/dedup-suggestions.rs",
      "is_primary": true,
      "label": null,
      "line_end": 5,
      "line_start": 5,
      "suggested_replacement": null,
      "suggestion_applicability": null,
      "text": [
        {
          "highlight_end": 29,
          "highlight_start": 9,
          "text": "        std::mem::forget(&x);"
        }
      ]
    }
  ]
}
{
  "$message_type": "diagnostic",
  "children": [],
  "code": null,
  "level": "warning",
  "message": "2 warnings emitted",
  "rendered": "warning: 2 warnings emitted/n/n",
  "spans": []
}